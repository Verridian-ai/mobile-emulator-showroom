# ========================================
# Mobile Emulator Platform - Environment Variables
# ========================================
#
# SECURITY NOTICE:
# - NEVER commit the actual .env file to git
# - .env is already in .gitignore
# - Copy this file to .env and fill in actual values
# - Keep production secrets separate from development
#
# Article V (Constitution): All secrets MUST be in environment variables
# ========================================

# ----------------------------------------
# Server Configuration (REQUIRED)
# ----------------------------------------

# Port for the Express server
# Default: 4175 (development), 80 (production)
PORT=4175

# Node environment
# Values: development | production | test
NODE_ENV=development

# ----------------------------------------
# Security Configuration (REQUIRED)
# ----------------------------------------

# Session secret for cookie signing and session encryption
# CRITICAL: Use a strong random string (min 32 characters)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your-session-secret-here-replace-with-strong-random-string

# CORS allowed origins (comma-separated)
# Default: * (allow all - ONLY for development)
# Production example: https://yourdomain.com,https://www.yourdomain.com
CORS_ALLOWED_ORIGINS=*

# Rate limiting
# Requests per 15-minute window per IP
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ----------------------------------------
# WebSocket Configuration (OPTIONAL)
# ----------------------------------------

# WebSocket broker URL (if using external broker)
# Example: ws://broker.example.com:7071
# BROKER_URL=ws://localhost:7071

# WebSocket broker authentication token
# CRITICAL: Use strong random token
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# BROKER_TOKEN=your-broker-token-here

# ----------------------------------------
# API Keys (OPTIONAL - if integrating external services)
# ----------------------------------------

# Claude API Key (if using Claude AI integration)
# Format: sk-ant-api03-...
# CLAUDE_API_KEY=sk-ant-api03-your-key-here

# Other API keys as needed
# AWS_ACCESS_KEY_ID=your-aws-key-here
# AWS_SECRET_ACCESS_KEY=your-aws-secret-here

# ----------------------------------------
# Database Configuration (OPTIONAL)
# ----------------------------------------

# Database connection URL (if using database)
# PostgreSQL example: postgresql://user:password@localhost:5432/dbname
# MongoDB example: mongodb://user:password@localhost:27017/dbname
# DATABASE_URL=postgresql://user:password@localhost:5432/mobile_emulator

# ----------------------------------------
# Logging Configuration (OPTIONAL)
# ----------------------------------------

# Log level
# Values: error | warn | info | debug
LOG_LEVEL=info

# ----------------------------------------
# Feature Flags (OPTIONAL)
# ----------------------------------------

# Enable debug mode (verbose logging)
# Values: true | false
DEBUG_MODE=false

# Enable API documentation endpoint
# Values: true | false
ENABLE_API_DOCS=true

# ----------------------------------------
# Production Security Headers (OPTIONAL)
# ----------------------------------------

# Helmet CSP directives (JSON string)
# Example: {"default-src":["'self'"],"script-src":["'self'","'unsafe-inline'"]}
# CSP_DIRECTIVES={}

# ----------------------------------------
# Monitoring & Analytics (OPTIONAL)
# ----------------------------------------

# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn-here

# Analytics tracking ID
# ANALYTICS_ID=your-analytics-id-here